#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import re
import sys
import glob
import itertools

from ruamel import yaml
from pprint import pprint
from subprocess import check_output

sys.dont_write_bytecode = True

SCRIPT_FILE = os.path.abspath(__file__)
SCRIPT_NAME = os.path.basename(SCRIPT_FILE)
SCRIPT_PATH = os.path.dirname(SCRIPT_FILE)
if os.path.islink(__file__):
    REAL_FILE = os.path.abspath(os.readlink(__file__))
    REAL_NAME = os.path.basename(REAL_FILE)
    REAL_PATH = os.path.dirname(REAL_FILE)

def str_presenter(dumper, data):
    str_tag = 'tag:yaml.org,2002:str'
    if len(data.splitlines()) > 1:
        return dumper.represent_scalar(str_tag, data, style='|')
    return dumper.represent_scalar(str_tag, data)

yaml.add_representer(str, str_presenter)

def list_presenter(dumper, data):
    list_tag = 'tag:yaml.org,2002:seq'
    if len(data) > 1:
        if all([isinstance(item, str) for item in data]):
            return dumper.represent_sequence(list_tag, data, flow_style=False)
    return dumper.represent_sequence(list_tag, data)

yaml.add_representer(list, list_presenter)

def yaml_format(obj):
    class MyDumper(yaml.Dumper):
        def represent_mapping(self, tag, mapping, flow_style=False):
            return yaml.Dumper.represent_mapping(self, tag, mapping, flow_style)
    return yaml.dump(obj, Dumper=MyDumper).strip()

def yaml_print(obj):
    return print(yaml_format(obj))

def get_filepaths(paths):
    filepaths = []
    for target in itertools.chain(*[glob.glob(os.path.expanduser(path)) for path in paths]):
        for root, _, filenames in os.walk(target):
            filepaths += ['/'.join([root, filename]) for filename in filenames]
    return filepaths

results = {}
for filepath in get_filepaths(sys.argv[1:]):
    output = check_output('file ' + filepath, shell=True).decode('utf-8').strip()
    content = output.split(':')[1].strip()
    if 'ASCII' in content:
        content = open(filepath).read()
    results[filepath] = content
yaml_print(results)
