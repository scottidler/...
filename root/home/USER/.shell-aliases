# vim: filetype=sh

if [ -n "$DEBUG" ]; then
    PS4=':${LINENO}+'
    set -x
fi

KS="kube-system"
CW="CW"
HEADER_SORT1='(read -r; printf "%s\n" "$REPLY"; sort)'
HEADER_SORT2='(read -r; printf "%s\n" "$REPLY"; sort -k2)'
ETHDEV="ip route get 1.1.1.1 | grep -Po '(?<=dev\s)\w+' | cut -f1 -d ' '"
REPO_TEST="git rev-parse"
REPO_ROOT="git rev-parse --show-toplevel"
REPONAME_PN="s;^(git|ssh|https)://([A-Za-z0-9\-\_]+@)?([A-Za-z0-9\.]+)/;;"
BRANCH_NAME="git rev-parse --abbrev-ref HEAD"
REMOTE_ORIGIN_URL="git config --get remote.origin.url"
NEAREST_TAG="git describe --abbrev=0"
CURRENT_SHELL="$(ps -o fname --no-headers $$)"

# global aliases, zsh only
if [[ "$CURRENT_SHELL" == "zsh" ]]; then
    # disable annoying oh-my-zsh aliases
    disable -a \...
    disable -a \....
    disable -a \.....
    disable -a \......
    disable -a \1
    disable -a \2
    disable -a \3
    disable -a \4
    disable -a \5
    disable -a \6
    disable -a \7
    disable -a \8
    disable -a \9

    alias /="rg"
    alias //="rg --hidden"
    alias cd..="cd .."
    alias cd../=cd../""

    alias -g CB="| xclip -sel clip"
    alias -g DE="DEPLOYED_ENV= #no-space"
    alias -g MB="\$(git merge-base main HEAD)"
    alias -g ST="SKIP_TEST=yes"
    alias -g PP="PYTHONPATH=."
    alias -g PB="| bash"
    alias -g WC="| wc -l"
    alias -g G="| grep"
    alias -g Gi="| grep -i"
    alias -g L="| less -r"
    alias -g SU="| sort | uniq"
    alias -g SU2="| sort | uniq -c | sort -nr"
    alias -g H10="| head -10"
    alias -g H20="| head -20"
    alias -g T10="| tail -10"
    alias -g T20="| tail -20"
    alias -g F1="| cut -d' ' -f1"
    alias -g F2="| cut -d' ' -f2"
    alias -g F3="| cut -d' ' -f3"
    alias -g X="| xargs -I%"
    alias -g b64="| base64"
    alias -g b64d="| base64 -d"
    alias -g voy-ing="ingress.voyager.appscode.com"
    alias -g voy-crt="certificate.voyager.appscode.com"
    alias -g header-sort="| $HEADER_SORT1"
    alias -g pb="props-bot"
    alias -g nb="newbie-bot"
    alias -g ac="autocert"
    alias -g oj="-o json"
    alias -g oy="-o yaml"
    alias -g after---="awk 'f;/---/{f=1}'"
    alias -g tee2files="> >(tee -a stdout.log) 2> >(tee -a stderr.log >&2)"
    alias -g h-json="-H 'Accept: application/json'"
    alias -g xargs-bash="| xargs -I% bash -c 'echo %; tab2 "

    alias -g k="kubectl"
    alias -g ka="kubectl apply -f"
    alias -g kg="kubectl get"
    alias -g kga="kubectl get all"
    alias -g kgA="kubectl get all,cert,order,secret,ingress,hr"
    alias -g kgC="kubectl get crd"
    alias -g kgp="kubectl get pod"
    alias -g kgs="kubectl get svc"
    alias -g kgS="kubectl get secret"
    alias -g kgd="kubectl get deployment"
    alias -g kgc="kubectl get certificate"
    alias -g kgh="kubectl get helmrelease"
    alias -g kgn="kubectl get namespace"
    alias -g kgN="kubectl get networkpolicy"
    alias -g kgv="kubectl get ingress.voyager.appscode.com"
    alias -g kd="kubectl describe"
    alias -g kdC="kubectl describe crd"
    alias -g kdp="kubectl describe pod"
    alias -g kds="kubectl describe svc"
    alias -g kdS="kubectl describe secret"
    alias -g kdd="kubectl describe deployment"
    alias -g kdc="kubectl describe certificate"
    alias -g kdv="kubectl describe ingress.voyager.appscode.com"
    alias -g kD="kubectl delete"
    alias -g kDC="kubectl delete crd"
    alias -g kDp="kubectl delete pod"
    alias -g kDs="kubectl delete svc"
    alias -g kDS="kubectl delete secret"
    alias -g kDd="kubectl delete deployment"
    alias -g kDn="kubectl delete namespace"
    alias -g kv="kubectl version"
    alias -g kvv="kubectl exec -it \$(kubectl get pods -n $CW -l app=voyager -o jsonpath={.items[0].metadata.name}) -n $CW voyager version"
    alias -g kl="kubectl logs"
    alias -g ns="--namespace"
    alias -g ns-cw="--namespace cw"
    alias -g ns-cm="--namespace cert-manager"
    alias -g ns-m="--namespace monitoring"
    alias -g ns-ks="--namespace kube-system"
    alias -g ns-fx="--namespace fluxcd"
    alias -g ns-r="--namespace refractr"
    alias -g ns-rp="--namespace refractr-prod"
    alias -g ns-rs="--namespace refractr-stage"
    alias -g ns-all="--all-namespaces"
    alias -g allofit="all,cert,order,secret,ingress,hr"

    alias -g ra="record:a"
    alias -g rcaa="record:caa"
    alias -g rcname="record:cname"
    alias -g rhost="record:host"
    alias -g rtxt="record:txt"

    alias -g p="Public"
    alias -g P="Private"

    alias -g e2o="2>&1"

    alias -g split="2>&1 | tr ' ' '\n'"

    alias -g RS="refractr.allizom.org"
    alias -g LH="localhost"
    alias -g LH80="localhost:80"
fi

alias fail="sudo journalctl -xe"

alias r="refractr"
alias fd="flip-dns"
alias R="rustc"
alias tf="terraform"
alias mk="minikube"
alias tf-fmt="terraform fmt -write=true -diff=true -recursive"
alias n="netlify"
alias f="fluxctl"

alias ct="cat Cargo.toml"

alias clh="curl localhost: #no-space"

alias cat="ccat"

alias ethdev="echo \$($ETHDEV)"

alias os="echo \"\$(lsb_release -is)-\$(lsb_release -rs)_x\$(getconf LONG_BIT)(\$(lsb_release -cs))\""

alias v="vault"
alias ve="vault exec"
alias vl="vault login"

alias aws-account-id="aws sts get-caller-identity | jq -r .Account"

alias untar="tar xvf"
alias T="tree -a -I '.*|__*|tf|venv|target'"

# regular alises
alias udpate="update"
alias linode="ssh root@45.33.26.141"
alias fog="ssh -A saidler@45.33.26.141"
alias cl="clear"
alias pe="pipenv"

alias ip-lan='ip addr show |grep "inet " |grep -v 127.0.0. |head -1|cut -d" " -f6|cut -d/ -f1 #no-expand'
alias ip-pub="curl https://ifconfig.co"

alias url-effective="curl -Ls -o /dev/null -w %{url_effective}"

alias pt="papertrail"
alias ds="dig +short"

alias ipy="ipython"

alias cdr="\$($REPO_TEST) && cd \$($REPO_ROOT)"
alias cdpr="\$($REPO_TEST) && {cd ../; cd \$($REPO_ROOT)}"
alias cdp="\$($REPO_TEST) && cd \$($REPO_ROOT) && cd ../"

# projects
alias cd-tmp="cd ~/tmp"
alias cd-repos="cd ~/repos"
alias cd-rusty="cd ~/tmp/rusty"
alias cd-otto="cd ~/repos/scottidler/otto"
alias cd-subhub="cd ~/repos/mozilla/subhub"
alias cd-autocert="cd ~/repos/mozilla-it/autocert"
alias cd-refractr="cd ~/repos/mozilla-it/refractr"
alias cd-helm-charts="cd ~/repos/mozilla-it/helm-charts"
alias cd-terraform-modules="cd ~/repos/mozilla-it/terraform-modules"
alias cd-newbie-bot="cd ~/repos/mozilla-it/newbie-bot"
alias cd-moz="cd ~/repos/mozilla/ #no-space"
alias cd-mozit="cd ~/repos/mozilla-it/ #no-space"
alias cd-redirects="cd ~/repos/sysadmins/puppet/modules/redirects/files/prod/etc-httpd-confd"
alias cd-leatherman="cd ~/repos/scottidler/leatherman"
alias cd-itse-apps-prod="cd ~/repos/mozilla-it/itse-apps-prod-1-infra"
alias cd-itse-apps-stage="cd ~/repos/mozilla-it/itse-apps-stage-1-infra"
alias cd-sso-dashboard="cd ~/repos/mozilla-iam/sso-dashboard-configuration"

alias bt="bloxtool"

alias cf="curl-follow"

alias d="docker"
alias dc="docker-compose"
alias dI="docker inspect"
alias di="docker images | $HEADER_SORT1"
alias dps="docker ps | $HEADER_SORT2"
alias dpsa="docker ps -a | $HEADER_SORT2"
alias dpsaq="docker ps -aq"
alias drm="docker rm"
alias drmi="docker rmi"
alias drit="docker run -it"
alias deit="docker exec -it"
alias ls-dangling-images='docker images -q --filter "dangling=true"'
alias rm-stopped-containers='docker rm $(docker ps -q -f "status=exited")'
alias rm-dangling-images='docker rmi $(docker images -q --filter "dangling=true")'

alias clipboard="xclip -sel clip"
alias pbcopy="xclip -sel clip"
alias pbpaste="xclip -sel clip -o"

alias t="kubetpl"

alias g="git"
alias ga="git add"
alias gb="git branch"
alias gc="git commit -m\" #no-space"
alias gcf="git cat-file -p"
alias gd="git diff"
alias gdm="git diff main"
alias gp="git pull"
alias gP="git push"
alias gpo="git push -u origin \$(git symbolic-ref --short -q HEAD)"
alias gs="git status --short"
alias gbc="git branch --contains"
alias gco="git checkout"
alias gcob="git checkout -b"
alias gcm="git checkout main"
alias gcM="git checkout master"
alias gcd="git checkout develop"
alias grp="git rev-parse"
alias gsh="git show"
alias gsn="git show --notes=*"
alias gpP="gp && gP"
alias gbmm="git branch --merged main"
alias gbnmm="git branch --no-merged main"
alias grh="git reset --hard"
alias grhh="git reset --hard HEAD"
alias grph="git rev-parse HEAD"
alias gfbn="git fetch origin +refs/notes/buildno/:refs/notes/buildno"
alias gfofu="git fetch origin -f -u +refs/heads/*:refs/heads/*"
alias grloa="git rev-list --objects --all"
alias grm="git rebase main"
alias grim="git rebase -i main"
alias tags="git tag -l"
alias gl="git log"
alias gl1="git log -1"
alias gl2="git log -2"
alias gl3="git log -3"
alias gl4="git log -4"
alias gl5="git log -5"
alias gl6="git log -6"
alias gl7="git log -7"
alias gl8="git log -8"
alias gl9="git log -9"
alias repo-root="$REPO_ROOT"
alias branch="$BRANCH_NAME"
alias reponame="echo \$($REMOTE_ORIGIN_URL | sed -E '$REPONAME_PN')"
alias remote-origin-url="echo \$($REMOTE_ORIGIN_URL)"
alias ls-not-git="git ls-files . --ignored --exclude-standard --others"
alias ls-remote="git ls-remote \$($REMOTE_ORIGIN_URL)"
alias ls-remote-heads="git ls-remote \$($REMOTE_ORIGIN_URL) | grep refs/heads/"
alias ls-remote-branch="git ls-remote \$($REMOTE_ORIGIN_URL) | grep refs/heads/\$($BRANCH_NAME)"
alias ls-remote-tag="git ls-remote \$($REMOTE_ORIGIN_URL) | grep refs/tags/\$($NEAREST_TAG)"
alias ls-remote-tags="git ls-remote \$($REMOTE_ORIGIN_URL) | grep refs/tags/"
alias not-on-main="git branch --no-merged main"
alias set-upstream="git branch --set-upstream-to=origin/\$(git rev-parse --abbrev-ref HEAD) \$(git rev-parse --abbrev-ref HEAD)"
alias prune="git remote prune origin"
alias unstage="git reset HEAD"
alias clean="git clean -xfd"
alias describe='git describe --match "v*" --abbrev=7'

alias gbp="git-big-picture"

alias gsm="git submodule"
alias gsmu="gsm update"
alias gsmur="gsm update --remote"
alias gsmui="gsm update --jobs=$((3 * $(nproc))) --init --recursive"

alias bashrc="vim ~/.bashrc; . ~/.bashrc"
alias zshrc="vim ~/.zshrc; . ~/.zshrc"
alias aliases="vim ~/.shell-aliases; . ~/.zshrc"
alias exports="vim ~/.shell-exports; . ~/.zshrc"
alias functions="vim ~/.shell-functions; . ~/.zshrc"

alias ureboot="update && reboot"
alias ushutdown="update && shutdown"

alias grn="grep -rn"
alias pgrn="| grn"
alias egrn="egrep -rn"
alias pegrn="| egrn"
alias psgrep="ps aux | grep -v grep | grep"
alias awsenv="env | grep AWS_"

alias moz="ssh sidler@moz.lan"
alias xps="ssh saidler@xps.lan"
alias mint="ssh saidler@mint.lan"
alias pffw="ssh saidler@pffw.lan"
alias fog="ssh saidler@fog.linode"

alias pip2="sudo -H python2 -m pip"
alias pip2.7="sudo -H python2.7 -m pip"
alias pip3="sudo -H python3 -m pip"
alias pip3-ii="sudo -H python3 -m pip install -U --ignore-installed"
alias pip3.6="sudo -H python3.6 -m pip"
alias pip3.6-ii="sudo -H python3.6 -m pip install -U --ignore-installed"
alias pip3.7="sudo -H python3.7 -m pip"
alias pip3.7-ii="sudo -H python3.7 -m pip install -U --ignore-installed"

alias rmpyc="find . -name "*.pyc" -print0 | xargs -0 /bin/rm"

alias xdo="xdotool"

alias irc="irccloud-search"
alias ap="ansible-playbook"

alias fix-dns="sudo systemd-resolve --flush-caches"

alias ci="cargo init"
alias cF="cargo fmt"
alias cc="cargo clippy"
alias cb="cargo build"
alias cr="cargo run --"
alias crh="cargo run -- --help"
alias rbt="RUST_BACKTRACE=1"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    #alias dir="dir --color=auto"
    #alias vdir="vdir --color=auto"

    #alias ls='ls --color=auto #no-expand'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
#alias lah="ls-stat -lah --color=always"
#alias ltr="ls-stat -ltr --color=always"
#alias ll="ls-stat -alF --color=always"
#alias la="ls-stat -A --color=always"
#alias l="ls-stat -CF --color=always"

alias lah="exa -lah --git"
alias ltr="exa -lr -sold"
alias ll="exa -alF"
alias la="exa -la"
alias ls="exa"

alias json2yaml="curl -sF \"json=@-\" https://x2y.rocks/yaml"
alias yaml2json="curl -sF \"yaml=@-\" https://x2y.rocks/json"

if [ -d ~/.shell-aliases.d/ ]; then
    for f in ~/.shell-aliases.d/*; do . $f; done
fi
